name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build_and_release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    strategy:
      matrix:
        python-version: [ "3.10" ]
        platform: ["ubuntu-20.04", "windows-latest"] # "macos-latest", "windows-latest"
        architecture: [ "x64" ]
        include:
          - architecture: "x86"
            platform: "windows-latest"
            python-version: "3.10"

    runs-on: ${{ matrix.platform }}

    defaults:
      run:
        working-directory: ./main

    steps:
      # https://github.com/actions/checkout#Checkout-multiple-repos-side-by-side
      - uses: actions/checkout@v4
        with:
          path: main

      - name: Setup ExifTool
        uses: actions/checkout@v4
        with:
          repository: "exiftool/exiftool"
          path: exiftool

      - name: Check ExifTool version
        run: |
          mv ${{ github.workspace }}/exiftool/exiftool ${{ github.workspace }}/exiftool/exiftool.pl
          perl ${{ github.workspace }}/exiftool/exiftool.pl -ver

      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3

        if: matrix.platform != 'macos-latest'

      - name: Set up ${{ matrix.architecture }} Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .

      - name: Create spec file
        run: |
          ls
          pwd
          python create_spec.py

      - name: Validate version
        run: |
          EXPECTED_GITHUB_REF=$(mapilio_kit --version | awk '{print "refs/tags/v" $1}')
          if [[ "$EXPECTED_GITHUB_REF" != "$GITHUB_REF" ]]; then
            echo "Version mismatch: $EXPECTED_GITHUB_REF != $GITHUB_REF"
            exit 1
          fi
        if: matrix.platform != 'windows-latest'


      - name: Build and test with Pyinstaller on MacOS
        if: matrix.platform == 'macos-latest'
        run: |
          python3 -m pip install pysocks
          python3 -m pip install pyinstaller
          chmod +x ./script/build_osx
          ./script/build_osx
        env:
          MAPILIO_KIT__TESTS_EXECUTABLE: ./dist/osx/mapilio-kit
          MAPILIO_KIT__TESTS_EXIFTOOL_EXECUTABLE: perl ${{ github.workspace }}/exiftool/exiftool.pl

      - name: Build and test with Pyinstaller on Ubuntu
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          ls 
          pwd
          python3 -m pip install pysocks
          python3 -m pip install pyinstaller
          chmod +x ./script/build_linux
          ./script/build_linux
          chmod +x ./dist/releases/mapilio-kit--linux-x86_64
        env:
          MAPILIO_KIT__TESTS_EXECUTABLE: ./dist/linux/mapilio-kit
          MAPILIO_KIT__TESTS_EXIFTOOL_EXECUTABLE: perl ${{ github.workspace }}/exiftool/exiftool.pl

      - name: Build and test with Pyinstaller on Windows
        if: matrix.platform == 'windows-latest'
        run: |
          ls 
          pwd
          python3 -m pip install pysocks
          python3 -m pip install pyinstaller
          ./script/build_bootloader.ps1
          ./script/build_win.ps1
          if (Test-Path ./dist/win/mapilio-kit--win-32bit.exe) {
            cp ./dist/win/mapilio-kit--win-32bit.exe mapilio-kit--win-32bit.exe
          }
          if (Test-Path ./dist/win/mapilio-kit--win-64bit.exe) {
            cp ./dist/win/mapilio-kit--win-64bit.exe mapilio-kit--win-64bit.exe
          }
        env:
          MAPILIO_KIT__TESTS_EXECUTABLE: mapilio-kit_WINDOWS_VERY_HARD_TO_FIND_YOU_IN_ANOTHER_DIR_SO_I_MOVE_YOU_HERE.exe
          MAPILIO_KIT__TESTS_EXIFTOOL_EXECUTABLE: perl ${{ github.workspace }}/exiftool/exiftool.pl

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          draft: true
          generate_release_notes: true
          fail_on_unmatched_files: true
          files: |
            ./main/dist/releases/*
